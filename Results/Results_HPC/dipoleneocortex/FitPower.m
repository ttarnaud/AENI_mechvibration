function [fitresult,coeff,gof] = FitPower(xdata, ydata)
%CREATEFIT(XDATA,YDATA)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : xdata
%      Y Output: ydata
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 06-Jun-2019 17:39:42


%% Fit: 'untitled fit 1'.

[xData, yData] = prepareCurveData( xdata, ydata );
try
% Set up fittype and options.
ft = fittype( 'a*x^b+c', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0 0];
opts.StartPoint = [0.633359819773667 0.195059060258798 0.921365075665118];
opts.TolFun = 1e-12;
opts.TolX = 1e-12;

% Fit model to data.

[fitresult, gof] = fit( xData, yData, ft, opts );
coeff = coeffvalues(fitresult);
catch
    options = optimoptions('lsqcurvefit','Tolfun',1e-12);
%     opts.StartPoint = [0.633359819773667 0.195059060258798 0.921365075665118];
%     opts.Lower = [0 0 0];
%     coeff = lsqcurvefit(@(p,x) p(1)*x.^p(2)+p(3),opts.StartPoint,xData,yData,opts.Lower,[inf,inf,inf],options);
   
    X0 = [0.633359819773667 0.195059060258798 0.921365075665118];
    LB = [0 0 0];
    UB = [inf,inf,inf];
    problem=createOptimProblem('lsqcurvefit',...
                'objective',@(p,x) p(1)*x.^p(2)+p(3),...
                'xdata',xdata,'ydata',ydata,...
                'x0',X0,...
                'lb',LB,...
                'ub',UB, 'options',options);
            ms = MultiStart('Display','off','UseParallel','always','FunctionTolerance',1e-10,'XTolerance',1e-10);
            [coeff,fitresult]= run(ms,problem,32);
    fitresult = nan; gof = nan;
end
end


